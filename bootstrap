#!/usr/bin/env bash
# bootstrap
# An executable to bootstrap my setup, configuration, dotfiles, etc. on a
# fresh (Ubuntu) host.
#
# This executable is not responsible for installing all of my configuration
# itself. It does the minimal amount of work required to get git up and running
# so it can clone down my other configuration repositories and use their
# installers.
#
# This executable can be downloaded and run using only programs available on a
# fresh, minimal Ubuntu installation. It's available publically and redirected
# to from a tinyurl. It can be downloaded using `wget` or `curl` (if `curl` is
# available, which it isn't on fresh Ubuntu installs) and run with the
# following commands.
#
# 	wget -O bootstrap https://tinyurl.com/benjaminedwardwebb 
# 	bash bootstrap
#
# 	sudo apt install curl
# 	curl -L https://tinyurl.com/benjaminedwardwebb > bootstrap
#	bash bootstrap
#
# It's also possible to use the long url to obtain the raw content from
# GitHub.
#
# 	curl https://raw.githubusercontent.com/benjaminedwardwebb/benjaminedwardwebb/main/bootstrap > bootstrap
#
# This bootstrap still contains a manual step of adding the newly generated
# SSH key (for git cloning purposes) to my GitHub account. This could probably
# be automated provided all my configuration repositories were public on
# GitHub.
#
# Note, however, that there's likely to be some manual step in bootstrapping
# any new host because it will eventually require the exchange of secrets
# (passwords, keys, etc.). This happens in the context of cloning private git
# repositories here, but seeding secrets to a new host is likely to be
# required for a lot of other things as well. This kind of secret exchange
# could be automated, but it would add a lot of complexity and is probably a
# bad idea. Maybe there is a service that can perform this for me.
# TODO bootstrap: Consider how to seed new hosts with secrets. Should this occur in the bootstrap script or something else?
echo "Bootstrapping configuration ..."

sudo apt install git

# Since most of my setup and configuration is still in a private repository on
# GitHub, I have to authenticate before I can access it. The following steps
# generate an SSH key pair and then prompt you to add it to your GitHub
# account. Note that an SSH key is required for fetching git repositories via
# SSH whether they are public or private, however the ability of the key to
# identify you also provides access to private repositories for the account the
# key is added to.
ssh_key_path="$HOME/.ssh/id_rsa"

ssh-keygen -f "${ssh_key_path}" -N ''

echo "Add the following public SSH key (at ${ssh_key_path}.pub) to your GitHub account.\n"
cat "${ssh_key_path}.pub"

read -p "Continue? [Enter]"

git clone git@github.com:benjaminedwardwebb/backpack
git clone git@github.com:benjaminedwardwebb/.vim

pushd backpack
./install
popd

read -p "Bootstrap complete. Reboot? [Enter]"

shutdown -r now
